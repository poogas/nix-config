import os

def get_repo_context(repo_path, output_file='repo_context.txt', ignore_list=None):
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.

    :param repo_path: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    :param output_file: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞.
    :param ignore_list: –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    if ignore_list is None:
        ignore_list = [
            '.git', '.vscode', '__pycache__', 'node_modules', 'dist', 'build',
            '.DS_Store', '*.pyc', '*.log', '*.tmp', '*.swp', 'assets' 
        ]

    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø–æ –ø—É—Ç–∏: {os.path.abspath(repo_path)}\n\n")

        # –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        f.write("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:\n")
        for root, dirs, files in os.walk(repo_path):
            # –ò—Å–∫–ª—é—á–∞–µ–º –ø–∞–ø–∫–∏ –∏–∑ ignore_list
            dirs[:] = [d for d in dirs if d not in ignore_list]
            
            level = root.replace(repo_path, '').count(os.sep)
            indent = ' ' * 4 * level
            f.write(f"{indent}üìÇ {os.path.basename(root)}/\n")
            
            sub_indent = ' ' * 4 * (level + 1)
            for file in files:
                if file not in ignore_list:
                    f.write(f"{sub_indent}üìÑ {file}\n")
        
        f.write("\n" + "="*80 + "\n\n")
        f.write("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤:\n\n")

        # –ó–∞—Ç–µ–º –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        for root, dirs, files in os.walk(repo_path):
            # –°–Ω–æ–≤–∞ –∏—Å–∫–ª—é—á–∞–µ–º –ø–∞–ø–∫–∏
            dirs[:] = [d for d in dirs if d not in ignore_list]

            for file in files:
                if file in ignore_list:
                    continue

                file_path = os.path.join(root, file)
                relative_path = os.path.relpath(file_path, repo_path)
                
                f.write(f"--- –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ñ–∞–π–ª: {relative_path} ---\n\n")
                try:
                    with open(file_path, 'r', encoding='utf-8', errors='ignore') as content_file:
                        f.write(content_file.read())
                except Exception as e:
                    f.write(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª: {e}\n")
                f.write(f"\n--- –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ñ–∞–π–ª: {relative_path} ---\n\n")

    print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª: {output_file}")

if __name__ == '__main__':
    # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é –∑–¥–µ—Å—å
    # –ù–∞–ø—Ä–∏–º–µ—Ä: '/Users/username/projects/my-awesome-project' –∏–ª–∏ 'C:\\Users\\username\\Documents\\my-project'
    # –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '.'
    path_to_repo = '.' 
    get_repo_context(path_to_repo)
